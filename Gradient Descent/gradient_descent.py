# -*- coding: utf-8 -*-
"""Gradient descent.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P5MUAHCWzpZ0eSN_nKQhu_yWloBcFsE8
"""

import numpy as np

def gradient_descent(x,y):
  m=1  #assumption of m
  b=0  #assumption of b
  lr=0.001  #Learning Rate 
  itr=1000 #number of iterations
  for i in range(itr):
    derivative_b=(-2)*sum(y-m*x-b) #d/db(L) slope of b
    derivative_m=(-2)*sum(x*(y-m*x-b)) #d/db(m) slope of m
    b-=lr*derivative_b #Update b
    m-=lr*derivative_m #Update m

    print("Step: {} -> b = {} & m = {} ".format(i,round(b, 3),round(m, 3)))

x=np.array([1,3])  #Values of x
y=np.array([2,4])  #values of y
gradient_descent(x,y)